
 create table category (id bigserial not null, name varchar(255), primary key (id))
    ; create table category_tasks (category_id bigint not null, tasks_id bigint not null unique)
    ; create table event (end_date timestamp(6), event_format_id bigint, event_status_id bigint, event_type_id bigint, id bigserial not null, image_id bigint unique, location_id bigint, start_date timestamp(6), winner_id bigint, description varchar(255), key varchar(255), title varchar(255), primary key (id))
    ; create table event_challenges (challenges_id bigint not null unique, event_id bigint not null)
    ; create table event_joined_hackers (event_id bigint not null, joined_hackers_id bigint not null)
    ; create table event_joined_teams (event_id bigint not null, joined_teams_id bigint not null)
    ; create table event_format (id bigserial not null, title varchar(255), primary key (id))
    ; create table event_score_board (point integer, event_id bigint, hacker_id bigint, id bigserial not null, team_id bigint, primary key (id))
    ; create table event_score_board_submitted_tasks (event_score_board_id bigint not null, submitted_tasks_id bigint not null)
    ; create table event_status (id bigserial not null, title varchar(255), primary key (id))
    ; create table event_type (id bigserial not null, title varchar(255), primary key (id))
    ; create table file_data (id bigserial not null, name varchar(255), path varchar(255), type varchar(255), image_data bytea, primary key (id))
    ; create table hacker_table (level integer, points integer, id bigserial not null, primary key (id))
    ; create table hacker_table_answered_tasks (answered_tasks_id bigint not null, hacker_id bigint not null)
    ; create table hacker_table_favorites (favorites_id bigint not null, hacker_id bigint not null)
    ; create table hacker_table_hacker_past_events (hacker_id bigint not null, hacker_past_events_id bigint not null)
    ; create table hacker_task_answer_history (hacker_id bigint, id bigserial not null, task_id bigint, time varchar(255), primary key (id))
    ; create table hint (usable boolean, id bigserial not null, task_id bigint, title varchar(255), primary key (id))
    ; create table jeopardy (id bigserial not null, primary key (id))
    ; create table jeopardy_tasks (jeopardy_id bigint not null, tasks_id bigint not null unique)
    ; create table level (id bigserial not null, name varchar(255), primary key (id))
    ; create table level_tasks (level_id bigint not null, tasks_id bigint not null unique)
    ; create table location (id bigserial not null, title varchar(255), primary key (id))
    ; create table opened_hints (hacker_id bigint, hint_id bigint, id bigserial not null, task_id bigint, primary key (id))
    ; create table task (is_private boolean, points integer, user_solves integer, category_id bigint, download_file_id bigint unique, id bigserial not null, level_id bigint, release_date timestamp(6), description varchar(255), name varchar(255), submit_flag varchar(255), task_creator varchar(255), primary key (id))
    ; create table task_answered_hackers (answered_hackers_id bigint not null, task_id bigint not null)
    ; create table task_disliked_hackers (disliked_hackers_id bigint not null, task_id bigint not null)
    ; create table task_hints (hints_id bigint not null unique, task_id bigint not null)
    ; create table task_liked_hackers (liked_hackers_id bigint not null, task_id bigint not null)
    ; create table teacher_table (id bigserial not null, proof_id bigint unique, primary key (id))
    ; create table team (id bigserial not null, leader_id bigint unique, location_id bigint unique, team_points bigint, created_date varchar(255), description varchar(255), title varchar(255), primary key (id))
    ; create table team_members (members_id bigint not null unique, team_id bigint not null)
    ; create table team_past_events (past_events_id bigint not null, team_id bigint not null)
    ; create table users_table (check_code integer, refresh_code integer, to_business boolean, access_to_business_id bigint unique, hacker_id bigint unique, id bigserial not null, logo_image_id bigint unique, teacher_id bigint unique, business_file_sent_date varchar(255), creation_date varchar(255), email varchar(255), nickname varchar(255), password varchar(255), role varchar(255) check (role in ('HACKER','ADMIN','BUSINESS')), primary key (id));